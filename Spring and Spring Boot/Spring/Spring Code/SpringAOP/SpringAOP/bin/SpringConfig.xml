<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC  "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!--CONFIG my main proxy-->
	<bean id="businesslogicbean" class="org.springframework.aop.framework.ProxyFactoryBean">
		<property name="proxyInterfaces">
			<value>IBusinessLogic</value>
		</property>
		<property name="target">
			<ref local="beanTarget"/>
		</property>
		<property name="interceptorNames">
			<list>
				<value>tracingBeforeAdvisor</value>
				<value>tracingAfterAdvisor</value>
				<value>loggingThrowsAdvisor</value>
			</list>
		</property>
	</bean>

	<!--bean entry for my target/concreate class-->
	<bean id="beanTarget" class="BusinessLogic"/>

    	<!--ADVICE-->
	<bean id="theTracingBeforeAdvice" 	class="TracingBeforeAdvice"/>
	<bean id="theTracingAfterAdvice" 	class="TracingAfterAdvice"/>
	<bean id="theLoggingThrowsAdvice" 	class="LoggingThrowsAdvice"/>

	<!-- pointcutAdvisor/aspect definition for before advice -->
	<bean id="tracingBeforeAdvisor"
	class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref local="theTracingBeforeAdvice"/>
		</property>
		<property name="pattern">
			<value>.*f.*</value>
		</property>
	</bean>

	<!-- Advisor pointcut definition for after advice -->
	<bean id="tracingAfterAdvisor"
	class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref local="theTracingAfterAdvice"/>
		</property>
		<property name="pattern">
			<value>.*</value>
		</property>
	</bean>

	<!-- Advisor pointcut definition for throws advice -->
	<bean id="loggingThrowsAdvisor"
	class="org.springframework.aop.support.RegexpMethodPointcutAdvisor">
		<property name="advice">
			<ref local="theLoggingThrowsAdvice"/>
		</property>
		<property name="pattern">
			<value>.*</value>
		</property>
	</bean>


</beans>